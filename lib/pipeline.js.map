{"version":3,"sources":["pipeline.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;;2BAKR,eAAe;;2BACD,eAAe;;;;0BAI7B,cAAc;;4BACC,gBAAgB;;;;;;;;IAK9B,QAAQ;;;;;AAID,WAJP,QAAQ,GAIE;0BAJV,QAAQ;;AAKV,QAAI,CAAC,UAAU,GAAG,iBAlBpB,SAAS,EAkB0B,CAAC;AAClC,QAAI,CAAC,OAAO,GAAG,yBAAO,KAAK,CAAC;AAC1B,SAAG,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;KAC3B,CAAC,CAAC;GACJ;;eATG,QAAQ;;;;;;;WAeP,eAAC,SAAS,EAAE,OAAO,EAAE,eAAe,EAAE;;;AACzC,aAAO,0BAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,UAAC,OAAO,EAAK;AACrC,YAAI,GAAG,CAAC;AACR,YAAI,OAAO,CAAC,KAAK,EAAE;AACjB,aAAG,GAAG,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC;SACnC;AACD,WAAG,GAAG,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC;AAClC,YAAI,QAAQ,CAAC;AACb,YAAI,OAAO,CAAC,MAAM,EAAE;AAClB,kBAAQ,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC;SAC/B;AACD,cAAK,OAAO,CAAC,IAAI,CAAC,uBAAuB,EAAE,QAAQ,CAAC,CAAC;AACrD,YAAI,eAAe,IAAI,eAAe,CAAC,MAAM,EAAE;AAC7C,gBAAK,OAAO,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;AAC1C,cAAI,eAAe,CAAC,MAAM,CAAC,GAAG,EAAE;AAC9B,oBAAQ,GAAG,eAAe,CAAC,MAAM,CAAC,GAAG,CAAC;WACvC,MAAM;AACL,oBAAQ,GAAG,eAAe,CAAC,MAAM,CAAC;WACnC;SAEF;AACD,cAAK,OAAO,CAAC,IAAI,CAAC,yBAAyB,EAAE,QAAQ,CAAC,CAAC;AACvD,YAAI,EAAE,GAAG,gBA7Cb,KAAK,CA6CkB;AACjB,uBAAa,EAAE,OAAO,CAAC,WAAW,CAAC,GAAG;AACtC,mBAAS,EAAE,SAAS;AACpB,qBAAW,EAAE,OAAO,CAAC,WAAW;AAChC,kBAAQ,EAAE,QAAQ;AAClB,uBAAa,EAAE,GAAG;AAClB,iBAAO,EAAE,OAAO;SACjB,CAAC,CAAC;;AAEH,eAAO,MAAK,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY;AAClD,iBAAO,EAAE,CAAC,QAAQ,EAAE,CAAC;SACtB,CAAC,CAAC;OACJ,CAAC,CAAC;KACJ;;;SAlDG,QAAQ;;;qBAqDC,QAAQ","file":"pipeline.js","sourcesContent":["'use strict';\n\nimport {\n  Publisher\n}\nfrom '@hoist/broker';\nimport logger from '@hoist/logger';\nimport {\n  Event\n}\nfrom '@hoist/model';\nimport Context from '@hoist/context';\n\n/**\n * Hoist Pipeline class for raising events\n */\nclass Pipeline {\n  /**\n   * create a new pipeline object\n   */\n  constructor() {\n    this._publisher = new Publisher();\n    this._logger = logger.child({\n      cls: this.constructor.name\n    });\n  }\n\n  /**\n   * raise an event with the given name and payload\n   * @\n   */\n  raise(eventName, payload, overrideContext) {\n    return Context.get().then((context) => {\n      var cid;\n      if (context.event) {\n        cid = context.event.correlationId;\n      }\n      cid = cid || require('uuid').v4();\n      var bucketId;\n      if (context.bucket) {\n        bucketId = context.bucket._id;\n      }\n      this._logger.info('bucketId from context', bucketId);\n      if (overrideContext && overrideContext.bucket) {\n        this._logger.info('overrideing bucketid');\n        if (overrideContext.bucket._id) {\n          bucketId = overrideContext.bucket._id;\n        } else {\n          bucketId = overrideContext.bucket;\n        }\n\n      }\n      this._logger.info('bucketid after override', bucketId);\n      var ev = new Event({\n        applicationId: context.application._id,\n        eventName: eventName,\n        environment: context.environment,\n        bucketId: bucketId,\n        correlationId: cid,\n        payload: payload\n      });\n\n      return this._publisher.publish(ev).then(function () {\n        return ev.toObject();\n      });\n    });\n  }\n}\n\nexport default Pipeline;\n"],"sourceRoot":"/source/"}